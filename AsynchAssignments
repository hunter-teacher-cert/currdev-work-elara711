# Assignments
* All assignments should be submitted by the start of the next class via github classroom (unless otherwise instructed)
* Use the Following GitHub Classroom link to create your assignment repository: https://classroom.github.com/a/nolh7LWN
* All assignments should be copleted in a markdown file with the following naming convention (unless otherwise noted): session_title.md e.g. 01_compare.md
* [Markdown Guide](https://guides.github.com/features/mastering-markdown/)
* [Markdown Cheat Sheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)

# Asynchronous Work
#### Most asynchronous work will happen over slack.
Asynchronous work is meant to take up the balance of our class time, since our live zoom sessions are only 1:15 long. Most often, asynchronous activities will take place as discussions over slack in the \#async_curdev slack channel. Usually, you will be asked to post and then respond to posts from others. As such, it is important to the whole class that you do not wait until the start of the following class to do your asynchronous work. If possible, take the remaining time at the end of our zoom sessions to at least add your post.




# Session 06: 10/27
## Assignment

## Async
* In the \#async_curdev slack channel:
  - Pick two different tech tools that fall under the same general category (like IDE, communication ). Provide a brief description of each, then compare and contrast them. Do you have a recommendation?


# Session 05: 10/13

## Asynchronous
* In the \#async_curdev slack channel:
  * Make a post describing an assignment that you are proud of.
    - Make this post by Monday so that others can respond.
    - If you have never created an assignment, reply to 2 more (5 total) posts instead.
  * Reply *as a thread* to at least 3 other posts with your thoughts on their assignment.
    - The replies must be done by the next class session.

# Session 04: 10/06

## Asynchronous:
Pick 2 (or more) of the languages looked at in class other than the one you discussed in your breakout room. Perform a similar analysis on them as you did in class. Use that imformation to help inform your choice for the assignment.
1. Processing: <https://processing.org/>
   * Sample: <https://processing.org/examples/setupdraw.html>
2. Scratch/Snap: <https://scratch.mit.edu/>
3. Netlogo <https://ccl.northwestern.edu/netlogo/>
   * Sample: <http://www.netlogoweb.org/launch#http://www.netlogoweb.org/assets/modelslib/Sample%20Models/Biology/Evolution/Genetic%20Drift/GenDrift%20P%20global.nlogo>
4. Javscript <https://www.javascript.com/>
   * Resources: <https://www.javascript.com/resources>
5. Racket/Scheme <https://docs.racket-lang.org/quick/>

---

# Session 03: 09/22 or 09/29

## Asynchronous:
Use your asybnchrous time to get some movement on your fieldwork. Either recrod & upload a class, or observe/watch someone else. Don't forget to log it on your spreadsheet.

---

# Session 02: 09/15

## Asynchronous:
* In the \#async_curdev slack channel:
* Share a topic that you are considering to use for the unit plan project.
* Explain what class it would fit into, and why you chose this particular topic.
* What computer science curricular needs does this topic fill?
* Reply to two other posts.
  * You must choose posts that are about unit plans from a different grade-level/course-level than your unit.
  * In each reply explain the connections between the two units, and how your unit can support or be supported by the other.

---

# Session 01: 09/08

## Asynchronous:
* In the \#async_curdev slack channel:
* Have one person from each breakout room post about the selected CSP curriculum with the following information:
  - What tool(s) are used
  - Is there a specific instructional focus, if so, what?
  - Is there a specific content focus, if so, what?
* Each person from that room should reply to that post with the following:
  - How well does it match up with the [College Board's CSP Course Description](https://apcentral.collegeboard.org/media/pdf/ap-computer-science-principles-course-at-a-glance.pdf)?
  - What is the best part of this curriculum?
  - What is something you believe could be improved about this curriculum? How would you improve it?


---

# Session 00: 09/01

## Asynchronous:
* In the \#async_curdev slack channel, continued from class:
* As a group, create a slack post that summarizes your group's discussion on the points you were discussing:
  * Do you think this concept is a major part of computer science?
  * How well do the individual standards support the concept?
  * How well do the standards seem to conform to given grade levels?
  * Are there areas of this concept that are missing?
* Individually: Look over the different concept/sub-concept threads. Pick 3 (of the ones you didnâ€™t discuss in class), read the related material for those three, and provide your response to the prompts.
